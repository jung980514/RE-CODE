version: '3.8'

services:
  redis:
    build: ./redis
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    restart: always
    networks:
      - app-network

  backend:
    build: ./backend
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - CLOVA_DOMAIN_CODE=${CLOVA_DOMAIN_CODE}
      - CLOVA_DOMAIN_ID=${CLOVA_DOMAIN_ID}
      - CLOVA_SECRET_KEY=${CLOVA_SECRET_KEY}
      - GMS_API_KEY=${GMS_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - DB_IP=${DB_IP}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
    depends_on:
      - redis
    expose:
      - "8088"
    networks:
      - app-network
    healthcheck:
        test: [ "CMD", "wget", "-qO-", "http://localhost:8081/actuator/health/liveness" ]
        interval: 15s
        timeout: 3s
        retries: 3

  frontend:
    build: ./frontend
    expose:
      - "3030"
    environment:
      - PORT=3030
    networks:
      - app-network

  prometheus:
    user: "65534:65534"
    build: ./prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.retention.size=5GB
      - --web.enable-lifecycle      # /-/reload 로 무중단 리로드
    restart: unless-stopped
    networks:
      - app-network

  grafana:
    build: ./grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SERVER_ROOT_URL=https://recone-my-life.site/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PW}
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
      - prometheus
      - grafana
    networks:
      - app-network

volumes:
  grafana-data:
  prometheus-data:
networks:
  app-network:
    driver: bridge


