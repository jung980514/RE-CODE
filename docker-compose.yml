version: '3.8'

services:
  backend:
    image: hj00b/recode-backend:${ENV:-dev}-${BUILD_NUMBER:-latest}
    container_name: recode-backend-${ENV:-dev}
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=${ENV:-dev}
      - BUILD_NUMBER=${BUILD_NUMBER:-latest}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL:-jdbc:mysql://localhost:3306/recode}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME:-root}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD:-password}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET:-recode-bucket}
      - AWS_REGION=${AWS_REGION:-ap-northeast-2}
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    image: hj00b/recode-frontend:${ENV:-dev}-${BUILD_NUMBER:-latest}
    container_name: recode-frontend-${ENV:-dev}
    expose:
      - "3030"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - BUILD_NUMBER=${BUILD_NUMBER:-latest}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8088}
      - NEXT_PUBLIC_ENV=${ENV:-dev}
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3030/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: hj00b/recode-nginx:${ENV:-dev}-${BUILD_NUMBER:-latest}
    container_name: recode-nginx-${ENV:-dev}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${SSL_CERT_PATH:-./nginx/ssl}:/etc/nginx/ssl:ro
    environment:
      - NGINX_ENV=${ENV:-dev}
      - NGINX_DOMAIN=${NGINX_DOMAIN:-localhost}
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge