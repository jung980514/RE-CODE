pipeline {
    agent any

    stages {
        stage('Cleanup') {
            steps {
                script {
                    // Stop and remove any previous containers managed by this docker-compose file.
                    // This is the correct and safe way to free up ports before a new deployment.
                    sh 'docker-compose down --remove-orphans || true'
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    sh 'docker-compose build'
                }
            }
        }
        stage('Push') {
            steps {
                script {
                    // Add your Docker Hub credentials to Jenkins
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin'
                        sh 'docker-compose push'
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    // Mount credentials and start services
                    sh 'docker-compose up -d'
                }
            }
        }
    }
    post {
        always {
            // Clean up dangling images
            sh 'docker image prune -f || true'
        }
    }
}
