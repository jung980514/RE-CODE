worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    upstream frontend {
        server frontend:3030;
    }

    upstream backend {
        server backend:8088;
    }

    # HTTP server that redirects to HTTPS
    server {
        listen 80;
        server_name recode-my-life.site www.recode-my-life.site;
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name recode-my-life.site www.recode-my-life.site;

        # SSL certificates will be mounted from Jenkins credentials
        ssl_certificate /etc/letsencrypt/live/recode-my-life.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/recode-my-life.site/privkey.pem;

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /swagger-ui/ { 
            proxy_pass http://backend/swagger-ui/; 
            roxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # HTTP server that redirects to HTTPS for i13e105.p.ssafy.io
    server {
        listen 80;
        server_name i13e105.p.ssafy.io;
        return 301 https://$host$request_uri;
    }

    # HTTPS server for i13e105.p.ssafy.io
    server {
        listen 443 ssl;
        server_name i13e105.p.ssafy.io;

        # SSL certificates for i13e105.p.ssafy.io
        ssl_certificate /etc/letsencrypt/live/i13e105.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/i13e105.p.ssafy.io/privkey.pem;

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
