worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    client_max_body_size 1000m;

    sendfile        on;
    keepalive_timeout  65;

    resolver 127.0.0.11 valid=5s;

    upstream frontend {
        server frontend:3030;
    }

    upstream backend {
        server backend:8088;
    }
    upstream prometheus {
        server prometheus:9090;
    }

    upstream grafana {
        server grafana:3000;
    }

    # HTTP server that redirects to HTTPS
    server {
        listen 80;
        server_name recode-my-life.site www.recode-my-life.site;
        return 301 https://$host$request_uri;
        client_max_body_size 1000m;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name recode-my-life.site www.recode-my-life.site;
        client_max_body_size 1000m;

        # SSL certificates will be mounted from Jenkins credentials
        ssl_certificate /etc/letsencrypt/live/recode-my-life.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/recode-my-life.site/privkey.pem;

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            client_max_body_size 1000m;
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin http://localhost:3000;
                add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS;
                add_header Access-Control-Allow-Headers Authorization,Content-Type;
                add_header Access-Control-Allow-Credentials true;
                return 204;
            }
            proxy_pass http://backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # 개발용
            add_header Access-Control-Allow-Origin http://localhost:3000;
            add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE;
            add_header Access-Control-Allow-Credentials true;
        }
        
        location /swagger-ui/ { 
            proxy_pass http://backend/swagger-ui/; 
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /v3/api-docs/ {
            proxy_pass http://backend/v3/api-docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /v3/api-docs {
            proxy_pass http://backend/v3/api-docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
         location /actuator/prometheus {
          allow 172.21.0.0/16; # prometheus 컨테이너/호스트 IP
          deny  all;
          proxy_pass http://backend/actuator/prometheus;
        }

        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
             proxy_read_timeout 300;
            proxy_send_timeout 300;
            proxy_redirect off;
        }

        # Grafana 접속 경로
        location /grafana/ {


            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 300;
            proxy_send_timeout 300;
            proxy_redirect off;
        }
    }

    # HTTP server that redirects to HTTPS for i13e105.p.ssafy.io
    server {
        listen 80;
        server_name i13e105.p.ssafy.io;
        return 301 https://$host$request_uri;
    }

    # HTTPS server for i13e105.p.ssafy.io
    server {
        listen 443 ssl;
        server_name i13e105.p.ssafy.io;

        # SSL certificates for i13e105.p.ssafy.io
        ssl_certificate /etc/letsencrypt/live/i13e105.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/i13e105.p.ssafy.io/privkey.pem;

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin http://localhost:3000;
                add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS;
                add_header Access-Control-Allow-Headers Authorization,Content-Type;
                add_header Access-Control-Allow-Credentials true;
                return 204;
            }
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # 개발용
            add_header Access-Control-Allow-Origin http://localhost:3000;
            add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE;
            add_header Access-Control-Allow-Credentials true;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        location /actuator/prometheus {
          allow 172.21.0.0/16;  # prometheus 컨테이너/호스트 IP
          deny  all;
          proxy_pass http://backend/actuator/prometheus;
        }
        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
             proxy_read_timeout 300;
            proxy_send_timeout 300;
            proxy_redirect off;
        }

        # Grafana 접속 경로
        location /grafana/ {


           proxy_pass http://grafana/;
           proxy_set_header Host $host;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";
           proxy_read_timeout 300;
           proxy_send_timeout 300;
           proxy_redirect off;
        }
    }
}
